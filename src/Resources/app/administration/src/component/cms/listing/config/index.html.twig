<div class="sw-cms-el-config-moorl-foundation-listing">
    <sw-tabs defaultItem="listing">
        <template slot-scope="{ active }">
            <sw-tabs-item name="listing"
                          :activeTab="active">
                {{ $tc('sw-cms.elements.moorl-foundation-listing.tab.listing') }}
            </sw-tabs-item>

            <sw-tabs-item name="layout"
                          :activeTab="active">
                {{ $tc('sw-cms.elements.moorl-foundation-listing.tab.layout') }}
            </sw-tabs-item>

            <sw-tabs-item v-if="element.config.listingLayout.value === 'slider'"
                          name="slider"
                          :activeTab="active">
                {{ $tc('sw-cms.elements.moorl-foundation-listing.tab.slider') }}
            </sw-tabs-item>

            <sw-tabs-item name="item"
                          :activeTab="active">
                {{ $tc('sw-cms.elements.moorl-foundation-listing.tab.item') }}
            </sw-tabs-item>

            <sw-tabs-item name="content"
                          :activeTab="active">
                {{ $tc('sw-cms.elements.moorl-foundation-listing.tab.content') }}
            </sw-tabs-item>
        </template>

        <template slot="content" slot-scope="{ active }">
            <sw-container v-if="active === 'listing'" key="listing">
                <sw-container columns="1fr 1fr" gap="0px 30px">
                    <div class="link-field">
                        <sw-select-field :label="$tc('sw-cms.elements.moorl-foundation-listing.label.listingSource')"
                                         @change="onSelectionChange"
                                         v-model="element.config.listingSource.value">
                            <option v-for="option in elementOptions.listingSource" :value="option.value">{{ $tc(option.label) }}</option>
                        </sw-select-field>

                        <router-link v-if="contentRoute" target="_blank" rel="noopener" :to="{ name: contentRoute }">
                            {{ $tc('sw-cms.elements.moorl-foundation-listing.label.manageContent') }}
                        </router-link>
                    </div>

                    <div class="link-field">
                        <sw-entity-single-select
                                :label="$tc('sw-cms.elements.moorl-foundation-listing.label.listingSorting')"
                                :helpText="$tc('sw-cms.elements.moorl-foundation-listing.helpText.listingSorting')"
                                v-model="element.config.listingSorting.value"
                                entity="moorl_sorting"
                                labelProperty="label"
                                show-clearable-button
                                :criteria="sortingCriteria">
                        </sw-entity-single-select>

                        <router-link target="_blank" rel="noopener" :to="{ name: 'moorl.sorting.list', params: { entity: entity } }">
                            {{ $tc('sw-cms.elements.moorl-foundation-listing.label.manageSorting') }}
                        </router-link>
                    </div>

                    <sw-field v-model="element.config.limit.value"
                              @change="onSelectionChange"
                              type="number"
                              :label="$tc('sw-cms.elements.moorl-foundation-listing.label.limit')">
                    </sw-field>

                    <sw-field v-model="element.config.foreignKey.value"
                              @change="onSelectionChange"
                              type="text"
                              :helpText="$tc('sw-cms.elements.moorl-foundation-listing.helpText.foreignKey')"
                              :label="$tc('sw-cms.elements.moorl-foundation-listing.label.foreignKey')">
                    </sw-field>
                </sw-container>

                <sw-entity-multi-select
                        v-if="element.config.listingSource.value === 'select'"
                        :label="$tc('sw-cms.elements.moorl-foundation-listing.label.listingItemIds')"
                        v-model="entityCollection"
                        @change="onSelectionChange">
                    <template #selection-label-property="{ item }">
                        {{ item.translated.name || item.name || item.translated.title || item.title }}
                    </template>
                    <template #result-label-property="{ item, index }">
                        {{ item.translated.name || item.name || item.translated.title || item.title }}
                    </template>
                </sw-entity-multi-select>

                {% block sw_cms_element_moorl_foundation_listing_config %}{% endblock %}
            </sw-container>

            <sw-container v-if="active === 'layout'" columns="1fr 1fr" gap="0px 30px">
                <sw-select-field :label="$tc('sw-cms.elements.moorl-foundation-listing.label.listingLayout')"
                                 v-model="element.config.listingLayout.value">
                    <option v-for="option in elementOptions.listingLayout" :value="option.value">{{ $tc(option.label) }}</option>
                </sw-select-field>

                <sw-select-field :label="$tc('sw-cms.elements.moorl-foundation-listing.label.itemLayout')"
                                 v-model="element.config.itemLayout.value">
                    <option v-for="option in elementOptions.itemLayout" :value="option.value">{{ $tc(option.label) }}</option>
                </sw-select-field>

                <sw-field v-if="element.config.itemLayout.value == 'custom'"
                          v-model="element.config.itemLayoutTemplate.value"
                          type="text"
                          :label="$tc('sw-cms.elements.moorl-foundation-listing.label.itemLayoutTemplate')">
                </sw-field>

                <sw-select-field :label="$tc('sw-cms.elements.moorl-foundation-listing.label.displayMode')"
                                 v-model="element.config.displayMode.value">
                    <option v-for="option in elementOptions.displayMode" :value="option.value">{{ $tc(option.label) }}</option>
                </sw-select-field>

                <sw-field v-model="element.config.gapSize.value"
                          type="text"
                          :label="$tc('sw-cms.elements.moorl-foundation-listing.label.gapSize')">
                </sw-field>
            </sw-container>

            <sw-container v-if="active === 'slider'"
                          columns="1fr 1fr"
                          gap="0px 30px">
                <sw-select-field :label="$tc('sw-cms.elements.moorl-foundation-listing.label.mode')"
                                 v-model="element.config.mode.value"
                                 show-clearable-button>
                    <option v-for="option in elementOptions.mode" :value="option.value">{{ $tc(option.label) }}</option>
                </sw-select-field>

                <sw-select-field :label="$tc('sw-cms.elements.moorl-foundation-listing.label.navigationArrows')"
                                 v-model="element.config.navigationArrows.value"
                                 show-clearable-button>
                    <option v-for="option in elementOptions.navigationArrows" :value="option.value">{{ $tc(option.label) }}</option>
                </sw-select-field>

                <sw-select-field :label="$tc('sw-cms.elements.moorl-foundation-listing.label.navigationDots')"
                                 v-model="element.config.navigationDots.value"
                                 show-clearable-button>
                    <option v-for="option in elementOptions.navigationDots" :value="option.value">{{ $tc(option.label) }}</option>
                </sw-select-field>

                <sw-field v-model="element.config.speed.value"
                          type="number"
                          :label="$tc('sw-cms.elements.moorl-foundation-listing.label.speed')">
                </sw-field>

                <sw-field v-model="element.config.autoplayTimeout.value"
                          type="number"
                          :label="$tc('sw-cms.elements.moorl-foundation-listing.label.autoplayTimeout')">
                </sw-field>

                <sw-field v-model="element.config.autoplay.value"
                          type="switch"
                          bordered
                          :label="$tc('sw-cms.elements.moorl-foundation-listing.label.autoplay')">
                </sw-field>

                <sw-field v-model="element.config.autoplayHoverPause.value"
                          type="switch"
                          bordered
                          :label="$tc('sw-cms.elements.moorl-foundation-listing.label.autoplayHoverPause')">
                </sw-field>

                <sw-field v-model="element.config.mouseDrag.value"
                          type="switch"
                          bordered
                          :label="$tc('sw-cms.elements.moorl-foundation-listing.label.mouseDrag')">
                </sw-field>

                <sw-select-field v-if="element.config.mode.value === 'gallery'"
                                 :label="$tc('sw-cms.elements.moorl-foundation-listing.label.animateIn')"
                                 :placeholder="$tc('sw-cms.elements.moorl-foundation-listing.label.animateIn')"
                                 v-model="element.config.animateIn.value">
                    <optgroup v-for="item in moorlFoundation.animateCss" :label="item.optgroup">
                        <option v-for="value in item.options" :value="value">{{ value }}</option>
                    </optgroup>
                </sw-select-field>

                <sw-select-field v-if="element.config.mode.value === 'gallery'"
                                 :label="$tc('sw-cms.elements.moorl-foundation-listing.label.animateOut')"
                                 :placeholder="$tc('sw-cms.elements.moorl-foundation-listing.label.animateIn')"
                                 v-model="element.config.animateOut.value">
                    <optgroup v-for="item in moorlFoundation.animateCss" :label="item.optgroup">
                        <option v-for="value in item.options" :value="value">{{ value }}</option>
                    </optgroup>
                </sw-select-field>
            </sw-container>

            <sw-container v-if="active === 'item'" columns="1fr 1fr" gap="0px 30px">
                <sw-field v-model="element.config.itemWidth.value"
                          type="text"
                          :label="$tc('sw-cms.elements.moorl-foundation-listing.label.itemWidth')">
                </sw-field>

                <sw-field v-model="element.config.itemHeight.value"
                          type="text"
                          :label="$tc('sw-cms.elements.moorl-foundation-listing.label.itemHeight')">
                </sw-field>

                <sw-field v-model="element.config.itemPadding.value"
                          type="text"
                          :label="$tc('sw-cms.elements.moorl-foundation-listing.label.itemPadding')">
                </sw-field>

                <sw-colorpicker v-model="element.config.itemBackgroundColor.value"
                                colorOutput="hex"
                                :zIndex="1000"
                                :alpha="false"
                                :label="$tc('sw-cms.elements.moorl-foundation-listing.label.itemBackgroundColor')">
                </sw-colorpicker>

                <sw-field v-model="element.config.itemHasBorder.value"
                          type="switch"
                          bordered
                          :label="$tc('sw-cms.elements.moorl-foundation-listing.label.itemHasBorder')">
                </sw-field>
            </sw-container>

            <sw-container v-if="active === 'content'" columns="1fr 1fr" gap="0px 30px">
                <sw-select-field :label="$tc('sw-cms.elements.moorl-foundation-listing.label.textAlign')"
                                 v-model="element.config.textAlign.value">
                    <option v-for="option in elementOptions.textAlign" :value="option.value">{{ $tc(option.label) }}</option>
                </sw-select-field>

                <sw-field v-model="element.config.contentPadding.value"
                          type="text"
                          :label="$tc('sw-cms.elements.moorl-foundation-listing.label.contentPadding')">
                </sw-field>

                <sw-colorpicker v-model="element.config.contentBackgroundColor.value"
                                colorOutput="hex"
                                :zIndex="1000"
                                :alpha="true"
                                :label="$tc('sw-cms.elements.moorl-foundation-listing.label.contentBackgroundColor')">
                </sw-colorpicker>

                <sw-colorpicker v-model="element.config.contentHighlightColor.value"
                                colorOutput="hex"
                                :zIndex="1000"
                                :alpha="false"
                                :label="$tc('sw-cms.elements.moorl-foundation-listing.label.contentHighlightColor')">
                </sw-colorpicker>

                <sw-colorpicker v-model="element.config.contentColor.value"
                                colorOutput="hex"
                                :zIndex="1000"
                                :alpha="false"
                                :label="$tc('sw-cms.elements.moorl-foundation-listing.label.contentColor')">
                </sw-colorpicker>

                <sw-field v-model="element.config.urlNewTab.value"
                          type="switch"
                          bordered
                          :label="$tc('sw-cms.elements.moorl-foundation-listing.label.urlNewTab')">
                </sw-field>

                <sw-field v-model="element.config.hasButton.value"
                          type="switch"
                          bordered
                          :label="$tc('sw-cms.elements.moorl-foundation-listing.label.hasButton')">
                </sw-field>

                <template v-if="element.config.hasButton.value">
                    <sw-field v-model="element.config.buttonClass.value"
                              type="text"
                              :label="$tc('sw-cms.elements.moorl-foundation-listing.label.buttonClass')">
                    </sw-field>

                    <sw-field v-model="element.config.buttonLabel.value"
                              type="text"
                              :label="$tc('sw-cms.elements.moorl-foundation-listing.label.buttonLabel')">
                    </sw-field>
                </template>

                {% block sw_cms_element_moorl_foundation_listing_config_content %}{% endblock %}
            </sw-container>
        </template>
    </sw-tabs>
</div>
